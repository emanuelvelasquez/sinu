@model  SINU.ViewModels.EstudiosVM

@*@{
    ViewBag.Title = "Estudios";
    Layout = "~/Views/Shared/_Layout.cshtml";
}*@

<h1>Estudios</h1>

<div class="form-group" id="divTABLE">

    <table id="TablaEstudio" class="table table-striped table-bordered dt-responsive nowrap" width="100%">
        @*<table id="example" class="display" cellspacing="0" width="100%">*@
        <thead>
            <tr>
                @* SE COMENTAN LAS COLUMNAS PARA MOSTRAR LA INFOMRACION MAS SOBRESALIENTE DE CADA REGISTRO *@
                <th hidden>IdEstudio</th>
                <th hidden>IdPersona</th>
                <th>@Html.DisplayNameFor(m => m.vPersona_EstudioListVM[-1].Nivel)</th>
                @*<th>@Html.DisplayNameFor(m => m.vPersona_EstudioListVM[-1].Completo)</th>
                <th>@Html.DisplayNameFor(m => m.vPersona_EstudioListVM[-1].Titulo)</th>*@
                <th>@Html.DisplayNameFor(m => m.vPersona_EstudioListVM[-1].Nombre)</th>
                @*<th>@Html.DisplayNameFor(m => m.vPersona_EstudioListVM[-1].Promedio)</th>*@
            </tr>
        </thead>
        <tbody>

            @foreach (var item in Model.vPersona_EstudioListVM)
            {
                <tr>
                    <td hidden>@Html.DisplayFor(modelItem => item.IdEstudio)</td>
                    <td hidden>@Html.DisplayFor(modelItem => item.IdPersona)</td>
                    <td>@Html.DisplayFor(modelItem => item.Nivel)</td>
                    @*<td>@Html.DisplayTextFor(modelItem => item.Completo)</td>
                    <td>@Html.DisplayFor(modelItem => item.Titulo)</td>*@
                    <td>@Html.DisplayFor(modelItem => item.Nombre)</td>
                    @*<td>@Html.DisplayFor(modelItem => item.Promedio)</td>*@
                </tr>
            }
        </tbody>

    </table>

    <!-- Button trigger modal -->
    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#ModalEstudio" id="NuevoEstudio">
        Agregar Estudio
    </button>


</div>



<!-- MODAL DE LA VISTA ESTUDIO VER SI SIRVE PARA QUE VISTAS PUEDE SERVIR -->
@*<div class="modal fade " id="ModalEstudio" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true" style="position:absolute !important;">
    <div class="modal-dialog modal-dialog-centered modal-lg " role="document">
        <div class="modal-content   " id="ModalEstudioCuerpo">

            <!--------------------------------------VISTA PARCIAL PARA LA ACTULIZACION Y CREAION DE REGISTRO DE ESTUDIOS DEL POSTULANTE------------------------------------------------------>

        </div>
    </div>
</div>*@

@section Scripts {


    @Scripts.Render("~/bundles/jqueryval")

    @*<script type="text/javascript">

        $(document).ready(function () {


            //aplico DATATABLES a las tablas necesrias
            TablaEST()

            //index de la fila seleccionada de la tabla
            var indexrow;

            //se llama al modal para cargar un nuevo estudio
            $("#NuevoEstudio").on("click", function () {
                //alert("modal nuevo estudio!!!");
                ModalEstudioCUD(null);
            });

            //funcion para aplicar datatable a la tabla estudio en la primera carga y actualizar la vista parcial de estudio
            function TablaEST() {

                var TEstudio = $('#TablaEstudio').DataTable({

                    responsive: {
                        details: false
                    },
                    "autoWidth": true,
                    select: 'single',
                    "columnDefs": [{
                        "searchable": false,
                        "orderable": false,
                        "targets": 0
                    }],
                    "order": [[1, 'asc']]
                });

                //al seleccionar una fila
                //guardo el index de la fila seleccionada
                //se llama al modal y se le envia la id de estudio correspondiete
                TEstudio.on('select.dt', function (e, dt, type, index) {
                        indexrow = index;
                        var data = dt.rows(index).data();
                        var id = data[0][0];
                        ModalEstudioCUD(id);
                        $("#ModalEstudio").modal("show");
                });
                //para deselecciponar la fila que fue seleccionada
                TEstudio.rows(indexrow).deselect();

                $("#Estudios").resize();
            };

            //al cerrarse el modal la fila seleccionada es DESELECCIONADA
            //se se actualiza la vista parcial en el caso que se elimine, modifique o se agregue un registro
            $("#ModalEstudio").on('hidden.bs.modal', function () {

                $("#Estudios").load('@Url.Action("Estudios","Postulante")', function () {

                    //se llama al modal para cargar un nuevo estudio
                    $("#NuevoEstudio").on("click", function () {
                        //alert("modal nuevo estudio!!!");
                        ModalEstudioCUD(null);
                    });

                    //aplico datatable a la tabla de estudio
                    TablaEST();
                });
            });

            //funcion que carga el modal de estudio
            //recibe "NULL" en caso de agregar un nuevo estudio y distinto a "NULL" para la modificacion o eliminacion
            function ModalEstudioCUD(idrec) {

                //elimino el contenido html
                $('#ModalEstudioCuerpo').html("");

                $.ajax({
                    cache: false,
                    asyn: true,
                    type: "GET",
                    url: '/Postulante/EstudiosCUD',
                    data: { ID: idrec },
                    //si no surge error al redireccionar se reemplaza el contenido de la div
                    success: function (response) {
                        $('#ModalEstudioCuerpo').html(response);

                        //con esto  funciona la validacion del lado del cliente con la vista parcial
                        $('#ModalEstudioCuerpo').removeData("validator");
                        $('#ModalEstudioCuerpo').removeData("unobtrusiveValidation");
                        $.validator.unobtrusive.parse('#ModalEstudioCuerpo');


                        //se aplicael selecpicker a alos conbo/s con autocomplete
                        /* https://developer.snapappointments.com/bootstrap-select/ */
                        $(".combobox").selectpicker({
                            liveSearch: true,
                            size: 6,
                            width: "17rem",
                            liveSearchPlaceholder: "Ingrese su busqueda",
                            liveSearchStyle: 'contains',//'startsWith'
                            noneResultsText: 'No se Encuantran Resultados',
                            styleBase: 'form-control'
                        });
           
                        $("select").on('changed.bs.select', function (e, clickedIndex, isSelected, previousValue) {

                            comboid = $(this).attr("id");
                            if (comboid != "ComboIdInstEST") {
                                //alert(comboid);
                                valcombo = $('#' + comboid + ' option:selected').html();
                                ComboCascada(comboid, valcombo);
                            }
                        });

              
                        //alert($("#IdInstEST").val() + " " + idrec);
                        if ($("#IdInstEST").val() != "" && idrec != null) {
                            //alert($("#vPersona_EstudioIdVM_IdInstitutos").val());
                            $("#checkext").attr("checked", "checked");
                        };

                        //lamo la funcion INSTEXT y mando cero por que esla primera carga
                        INSTEXT("#checkext", 0);

                        //cada vez que el checkbox de instituto en el exterior cambia de valor
                        $("#checkext").on("change", function () {
                            INSTEXT(this, 1);
                        });

                        //ELIMINA EL ESTUDIO SELECCIONADO
                        $("#EliminaEST").on("click", function () {
                            $.getJSON('/Postulante/EliminaEST',
                                { ID: idrec }, function (response) {
                                    alert(response.success + " - " + response.msg);
                                });
                        });

                        $("#EliminaEST,#GuardarEST").on("click", function () {

                            $("#ModalEstudio").modal("hide");
                        });

                    },

                    //si ocurre un error de no aurtorizacion redirige ala pagina de error del mismo
                    statusCode: {
                        500:
                            function (context) {
                                $('#ModalEstudioCuerpo').html(context.responseText);
                            }
                    }
                });


            };

            function INSTEXT(elemn, pri) {
                
                if ($(elemn).is(":checked")) {
                    $("#JuriEST,#IdInstEST").show();
                    $("label[for='Provincia']").text("Pais");
                    $(".INSAR").hide();
                    $("#ComboIdInstEST").val(0);
                } else {
                    $("#JuriEST,#IdInstEST").hide().val("");
                    $("label[for='Provincia']").text("Provincia/Juridiccion");
                    $(".INSAR").show();
                };
                if (pri != 0) {
                    $("#JuriEST,#IdInstEST").val("");

                }

            };

            function ComboCascada(Combo, ValC) {
                var OPC;
                if (Combo == "ComboJuriEST") {
                    OPC = 0;
                    $("#ComboLocaliEST,#ComboIdInstEST").html("")
                } else {
                   valprov = $("#ComboJuriEST").val();
                    ValC = valprov + "-" +  ValC;
                    //alert(ValC);
                    OPC = 1;
                    $("#ComboIdInstEST").html("")
                }
                //alert("sdf");
                $.getJSON('/Postulante/DropCascadaEST', {
                    opc: OPC, val: ValC
                },
                    function (data) {
                        //agrego al dropboxlist la etiqueta option con cada localidad que le corresponde a la juridiccion seleccionada
                        var combocas = (OPC == 0) ? "#ComboLocaliEST" : "#ComboIdInstEST";
                        alert(combocas);
                        $.each(data, function () {

                            $(combocas).append("<option value=" + this.Value + " >" + this.Text + "</option>");
                        });
                            $(combocas).append("<option value=" + this.Value + " >" + this.Text + "</option>");
                        $(combocas).selectpicker('refresh');

                    });
            };


        });

        function Exito(response, status, xhr) {
            alert("success: " + response.success + " " + response.msg);
        };

        //Si lallamada POST tuvo error
        function Falla(response) {
            alert("success: " + response.success + " " + response.msg);
        };

    </script>*@
}
